#version 450

struct Particle{
    vec3 Location;
    vec3 Velocity;
    vec3 DeltaLocation;
    float Lambda;
    float Density;
    float Mass;

    vec3 TmpVelocity;

    uint CellHash;
    uint TmpCellHash;


    uint NumNgbrs;
};

layout(binding=0) uniform UniformNSObject{
    uint numParticles;
    uint workgroup_count;
    uint hashsize;
    float sphRadius;
}; 
layout(binding=1) readonly buffer InIndexbuffer{
    uint inindex[];
};
layout(binding=2) buffer OutIndexbuffer{
    uint outindex[];
};
layout(binding=3) buffer ParticleBuffer{
    Particle particles[];
};
layout(binding=4) buffer ParticleNgbrBuffer{
    uint particlengbrs[];
};
layout(binding=5) buffer RSBucketBuffer{
    uint rsbucket[];
};
layout(binding=6) buffer CellinfoBuffer{
    uint cellinfo[];
};
layout(binding=7) buffer LocalPrefixBuffer{
    uint localprefix[];
};
shared uint presum[16*512];

layout(local_size_x=512,local_size_y=1,local_size_z=1) in;
void main(){
    uint localindex = (gl_LocalInvocationID.x);
    uint globalindex = (gl_GlobalInvocationID.x);
    uint wgindex = (gl_WorkGroupID.x);
    uint hashvalue;
    if(globalindex < numParticles){
        uint particleindex = inindex[globalindex];
        hashvalue = (particles[particleindex].TmpCellHash&0xF);
    }
    else{
        hashvalue = 0xF;
    }
    for(uint i=0;i<16;++i){
        if(hashvalue == i){
            presum[localindex*16+i] = 1;
        }
        else{
            presum[localindex*16+i] = 0;
        }
    }
    memoryBarrier();
    barrier();
    for(uint s=1;s<511;s*=2){
        uint idx = (s-1)+(localindex*2*s);
        uint idx_dst = 16*(idx+s);
        uint idx_src = 16*(idx);
        if(idx < 512){
            //TODO:unroll
            for(uint i=0;i<16;++i){
                presum[idx_dst+i] += presum[idx_src+i];
            }
        }
        memoryBarrier();
        barrier();
    }
    //TODO:unroll
    if(localindex == 511){
        for(uint i=0;i<16;++i){
            rsbucket[16*wgindex+i] = presum[511*16+i]; 
            presum[511*16+i] = 0;
        }
    }
    memoryBarrier();
    barrier();


    for(uint s=512;s>1;s/=2){
        uint idx = (s-1)+(localindex*s);
        uint idx_1 = 16*(idx-s/2);
        uint idx_2 = 16*(idx);
        if(idx<512){
            for(uint i=0;i<16;++i){
                uint t = presum[idx_2+i];
                presum[idx_2+i] += presum[idx_1+i];
                presum[idx_1+i] = t;
            }
        }
        memoryBarrier();
        barrier();
    }

    if(globalindex < numParticles){
        for(uint i=0;i<16;++i){
            localprefix[16*globalindex+i] = presum[16*localindex+i];
        }
    }

}