#version 450
struct Particle{
    vec3 Location;
    vec3 Velocity;
    vec3 DeltaLocation;
    float Lambda;
    float Density;
    float Mass;
    uint IsFluid;

    vec3 TmpVelocity;
};
layout(binding=0) uniform SimulateObj{
    float dt;
    float restDensity;
    float sphRadius;
    uint numParticles;
} simulateobj;

layout(std140,binding=1) readonly buffer ParticleSSBOIn{
    Particle particlesIn[];
};
layout(std140,binding=2) buffer ParticleSSBOout{
    Particle particlesout[];
};
layout(local_size_x=128,local_size_y=1,local_size_z=1) in;

float PI = 3.1415926;

float W_Poly6(vec3 r,float h)
{
    float ret = 0.0;
	float rl = length(r);
	float q = rl / h;
	float h3 = h * h * h;
	if (q <= 0.5)
	{
		float q2 = q * q;
		float q3 = q2 * q;
		ret = 8.0 / (PI * h3) * (6.0 * q3 - 6.0 * q2 + 1.0);
	}
	else
	{
		ret = 16.0 / (PI * h3) * pow(1 - q, 3.0);
	}
	return ret;
}
float W_Spiky(vec3 r,float h)
{
    float coeff = 15.0f/(PI*pow(h,6));
    float rlength = length(r);
    if(rlength<0||rlength>h) return 0.0f;
    float diff = h-rlength;
    float diff3 = diff*diff*diff;
    return coeff*diff3;
}
vec3 Grad_W_Spiky(vec3 r,float h)
{
    vec3 ret = {0,0,0};
	float rl = length(r);
	float q = rl / h;
	float h3 = h * h * h;
	if (rl > 1.0e-6)
	{
		vec3 gradq = float(1.0 / (rl * h)) * r;
		if (q <= 0.5)
		{
			ret = float(48.0 / (PI * h3) * q * (3.0 * q - 2.0)) * gradq;
		}
		else
		{
			float factor = 1.0 - q;
			ret = float(48.0 / (PI * h3) * (-factor * factor)) * gradq;
		}
	}
	return ret;
}
void main(){
  
}