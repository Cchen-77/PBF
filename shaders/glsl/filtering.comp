#version 450
layout(binding=0) uniform sampler2D old_depthtexture;
layout(binding=1,r32f) uniform writeonly image2D filtered_depthtexture;

layout(local_size_x=4,local_size_y=4,local_size_z=1) in;

void main(){
    ivec2 outcoord = ivec2(gl_GlobalInvocationID.xy);
    ivec2 imagesize = imageSize(filtered_depthtexture);
    
    if(outcoord.x >= imagesize.x || outcoord.y >= imagesize.y) return;

    float u = (outcoord.x + 0.5)/imagesize.x;
    float v = (outcoord.y + 0.5)/imagesize.y;

    float depth = texture(old_depthtexture,vec2(u,v)).r;

    // int r = 10;
    // float wsum = 0;
    // float sum = 0;
    // for(float dx=-r;dx<=r;++dx){
    //     for(float dy=-r;dy<=r;++dy){

    //         float u_d = u + dx/imagesize.x;
    //         float v_d = v + dy/imagesize.y;
    //         float d_d;
    //         if(u_d<0||u_d>1||v_d<0||v_d>1)
    //         {
    //             d_d = 1000;
    //         }
    //         else{
    //             d_d = texture(old_depthtexture,vec2(u_d,v_d)).r;
    //         }
            
    //         float coeff_c = -0.1*(dx*dx+dy*dy);

    //         float coeff_s = -0.1*(depth-d_d)*(depth-d_d);

    //         float coeff = exp(coeff_c+coeff_s);

    //         wsum += coeff;
    //         sum += coeff*d_d;
    //     }
    // }
    // sum/=wsum;


    imageStore(filtered_depthtexture,outcoord,vec4(depth,0,0,0));
}