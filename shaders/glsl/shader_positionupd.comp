#version 450
struct Particle{
    vec3 Location;
    vec3 Velocity;
    vec3 DeltaLocation;
    float Lambda;
    float Density;
    float Mass;
    uint IsFluid;

    vec3 TmpVelocity;
};
layout(binding=0) uniform ComputeObj{
    float DeltaTime;
    float RestDensity;
    float SphRadius;
    uint NumFluids;
    uint NumParticles;
} cobj;
layout(std140,binding=1) readonly buffer ParticleSSBOIn{
    Particle particlesIn[];
};
layout(std140,binding=2) buffer ParticleSSBOout{
    Particle particlesout[];
};
layout(local_size_x=128,local_size_y=1,local_size_z=1) in;

uint index;

void main(){
    index = gl_GlobalInvocationID.x;
    if(index >= cobj.NumParticles) return;
    
    if(particlesout[index].IsFluid == 0) return;

    particlesout[index].Location += particlesout[index].DeltaLocation;
}